{"ast":null,"code":"import _asyncToGenerator from\"/Users/adi/Node/NASA/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/adi/Node/NASA/client/node_modules/@babel/runtime/regenerator/index.js\";var API_URL='http://localhost:8000';function httpGetPlanets(){return _httpGetPlanets.apply(this,arguments);}function _httpGetPlanets(){_httpGetPlanets=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(API_URL,\"/planets\"));case 2:response=_context.sent;_context.next=5;return response.json();case 5:return _context.abrupt(\"return\",_context.sent);case 6:case\"end\":return _context.stop();}}},_callee);}));return _httpGetPlanets.apply(this,arguments);}function httpGetLaunches(){return _httpGetLaunches.apply(this,arguments);}function _httpGetLaunches(){_httpGetLaunches=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,fetchedLauncehs;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(API_URL,\"/launches\"));case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:fetchedLauncehs=_context2.sent;return _context2.abrupt(\"return\",fetchedLauncehs.sort(function(a,b){return a.flightnumber-b.flightnumber;}));case 7:case\"end\":return _context2.stop();}}},_callee2);}));return _httpGetLaunches.apply(this,arguments);}function httpSubmitLaunch(_x){return _httpSubmitLaunch.apply(this,arguments);}function _httpSubmitLaunch(){_httpSubmitLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(launch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"\".concat(API_URL,\"/launches\"),{method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(launch)});case 3:return _context3.abrupt(\"return\",_context3.sent);case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);return _context3.abrupt(\"return\",{ok:false});case 9:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}));return _httpSubmitLaunch.apply(this,arguments);}function httpAbortLaunch(_x2){return _httpAbortLaunch.apply(this,arguments);}function _httpAbortLaunch(){_httpAbortLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;console.log(\"try to delete\");_context4.next=4;return fetch(\"\".concat(API_URL,\"/launches/\").concat(id),{method:\"delete\"});case 4:return _context4.abrupt(\"return\",_context4.sent);case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);return _context4.abrupt(\"return\",{ok:false});case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[0,7]]);}));return _httpAbortLaunch.apply(this,arguments);}export{httpGetPlanets,httpGetLaunches,httpSubmitLaunch,httpAbortLaunch};","map":{"version":3,"sources":["/Users/adi/Node/NASA/client/src/hooks/requests.js"],"names":["API_URL","httpGetPlanets","fetch","response","json","httpGetLaunches","fetchedLauncehs","sort","a","b","flightnumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","ok","httpAbortLaunch","id","console","log"],"mappings":"qOAAA,GAAMA,CAAAA,OAAO,CAAE,uBAAf,C,QAEeC,CAAAA,c,oJAAf,sKAEyBC,CAAAA,KAAK,WAAIF,OAAJ,aAF9B,QAEQG,QAFR,qCAGeA,CAAAA,QAAQ,CAACC,IAAT,EAHf,6G,yDAMeC,CAAAA,e,uJAAf,4LAGyBH,CAAAA,KAAK,WAAIF,OAAJ,cAH9B,QAGQG,QAHR,uCAIgCA,CAAAA,QAAQ,CAACC,IAAT,EAJhC,QAIQE,eAJR,iDAKSA,eAAe,CAACC,IAAhB,CAAsB,SAACC,CAAD,CAAGC,CAAH,QAAUD,CAAAA,CAAC,CAACE,YAAF,CAAeD,CAAC,CAACC,YAA3B,EAAtB,CALT,0D,0DAQeC,CAAAA,gB,4JAAf,kBAAgCC,MAAhC,8JAIiBV,CAAAA,KAAK,WAAIF,OAAJ,cAAwB,CACxCa,MAAM,CAAG,MAD+B,CAExCC,OAAO,CAAC,CACN,eAAiB,kBADX,CAFgC,CAKxCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf,CALkC,CAAxB,CAJtB,qJAYW,CACLM,EAAE,CAAE,KADC,CAZX,uE,2DAmBeC,CAAAA,e,0JAAf,kBAA+BC,EAA/B,uIAKIC,OAAO,CAACC,GAAR,CAAY,eAAZ,EALJ,uBAMiBpB,CAAAA,KAAK,WAAIF,OAAJ,sBAAwBoB,EAAxB,EAA8B,CAC9CP,MAAM,CAAG,QADqC,CAA9B,CANtB,qJAUW,CACLK,EAAE,CAAE,KADC,CAVX,wE,kDAkBA,OAASjB,cAAT,CAAyBI,eAAzB,CAA0CM,gBAA1C,CAA4DQ,eAA5D","sourcesContent":["const API_URL= 'http://localhost:8000'\n\nasync function httpGetPlanets() {\n  // Load planets and return as JSON.\n  const response = await fetch(`${API_URL}/planets`);\n  return await response.json();\n}\n\nasync function httpGetLaunches() {\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n  const response = await fetch(`${API_URL}/launches`);\n  const fetchedLauncehs=  await response.json();\n  return fetchedLauncehs.sort( (a,b) => (a.flightnumber-b.flightnumber));\n}\n\nasync function httpSubmitLaunch(launch) {\n  // TODO: Once API is ready.\n  // Submit given launch data to launch system.\n  try {\n    return await fetch(`${API_URL}/launches`, {\n      method : \"post\",\n      headers:{\n        \"Content-Type\" : \"application/json\",\n      },\n      body: JSON.stringify(launch),\n    });\n  } catch (err){\n    return {\n      ok: false\n    };\n  }\n\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n\n  try{\n    console.log(\"try to delete\")\n    return await fetch(`${API_URL}/launches/${id}`, {\n      method : \"delete\",\n    });\n  } catch (err){\n    return {\n      ok: false\n    };\n  }\n\n  \n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };\n"]},"metadata":{},"sourceType":"module"}